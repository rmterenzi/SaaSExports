///$tab Main

///$tab Auto-generated section
Set dataManagerTables = '','Cars','Customers','Claims Staff','Office UK','Car Claims','UK Counties','uk-county-borders.kmz/Borders/United Kingdom/England/Shire Counties','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Greater Manchester','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Merseyside','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/South Yorkshire','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Tyne and Wear','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/West Midlands','uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/West Yorkshire','uk-county-borders.kmz/Borders/United Kingdom/England/London Boroughs','uk-county-borders.kmz/Borders/United Kingdom/England/City of London','uk-county-borders.kmz/Borders/United Kingdom/England/Unitary Authorites','uk-county-borders.kmz/Borders/United Kingdom/Scotland/Council Areas','uk-county-borders.kmz/Borders/United Kingdom/Wales/Unitary Authorities','uk-county-borders.kmz/Borders/United Kingdom/Northern Ireland/Districts','uk-county-borders.kmz/Borders/Crown Dependencies/Isle of Man','uk-county-borders.kmz/Borders/Crown Dependencies/Guernsey/Islands of Guernsey','uk-county-borders.kmz/Borders/Crown Dependencies/Jersey','Regions','Third Parties','Policies Cars','Suppliers','Channel','Brokers','BenchmarkDate';
//This block renames script tables from non generated section which conflict with the names of managed tables

For each name in $(dataManagerTables) 
    Let index = 0;
    Let currentName = name; 
    Let tableNumber = TableNumber(name); 
    Let matches = 0; 
    Do while not IsNull(tableNumber) or (index > 0 and matches > 0)
        index = index + 1; 
        currentName = name & '-' & index; 
        tableNumber = TableNumber(currentName) 
        matches = Match('$(currentName)', $(dataManagerTables));
    Loop 
    If index > 0 then 
            Rename Table '$(name)' to '$(currentName)'; 
    EndIf; 
Next; 
Set dataManagerTables = ;


Unqualify *;

Let vDateDiff = Year(Today())-'2019';

[Cars]:
LOAD
	[CarCounter],
	[CarId],
	[Vehicle Country of Make],
	[Vehicle Make],
	[Vehicle Model],
	[Vehicle Type],
	[Vehicle Rating Group],
	[VRG(50)]
    //[Vehicle Image]
FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Cars.xlsx]
(ooxml, embedded labels, table is Cars);


[Customers]:
LOAD
	[CustomerCounter],
	[Customer ID],
	[Broker Id],
	[Customer Name],
	[Customer Gender],
	Addyears(Date([Customer DOB]),($(vDateDiff))) AS [Customer DOB],
	[Customer Tel Num],
	[LocationID]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Customers.xlsx]
 (ooxml, embedded labels, table is Customers);

[Claims Staff]:
LOAD
	[StaffCounter],
	[Staff ID] AS [Claim Handler-Staff ID],
	[Staff Name],
	[Staff Gender],
	Addyears(Date([Staff DOB]),($(vDateDiff))) AS [Staff DOB],
    Addyears(Date([Staff Hire Date]),($(vDateDiff))) AS [Staff Hire Date],
	[Staff Job Level],
	[Staff Job Title],
	[Staff Manager],
	[OfficeId],
	[Department],
	[Team],
	[Contract Type],
	[Working Hours (per wk)],
	[Working Days (per wk)],
	[Holiday Allowance],
	[Holiday Taken],
	[Holiday Booked],
	[2 Weeks Booked]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Insurance Staff.xlsx]
(ooxml, embedded labels, table is [Claims Staff]);

[Office UK]:
LOAD
	[OfficeId],
	[CompanyCountry],
	[CompanyRegion],
	[CompanyOffice]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Offices.xlsx]
(ooxml, embedded labels, table is [Office UK]);

[Car Claims]:
LOAD
	[ClaimCounter],
	[Policy Id],
	[Claim Id],
	[Claim Handler] AS [Claim Handler-Staff ID],
	[Supplier Id],
	[Claim Status],
	[Claim Reopen Count],
	[Claim Type],
	[Claim Sub-Type],
	[Distance From PH Address],
	[Police At Scene],
	[TP Involved],
	[Car Manufactured Yr],
	[Total Claim Cost],
	Addyears(Date([Claim Occurrence Date]),($(vDateDiff))) AS [Claim Occurrence Date],
	Addyears(Date([Claim Notification Date]),($(vDateDiff))) AS [Claim Notification Date],
	Addyears(Date([Claim Settled Date]),($(vDateDiff))) AS [Claim Settled Date]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Claims Cars.xlsx]
(ooxml, embedded labels, table is [Car Claims]);

[uk-county-borders.kmz/Borders/United Kingdom/England/Shire Counties]:
LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Shire Counties]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Greater Manchester]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Merseyside]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/South Yorkshire]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/Tyne and Wear]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/West Midlands]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Metropolitan Boroughs/West Yorkshire]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/London Boroughs]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/City of London]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/England/Unitary Authorites]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/Scotland/Council Areas]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/Wales/Unitary Authorities]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/United Kingdom/Northern Ireland/Districts]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/Crown Dependencies/Isle of Man]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/Crown Dependencies/Guernsey/Islands of Guernsey]);

LOAD
	[UK Counties Polygons.Name] AS [County-UK County Names],
	[UK Counties Polygons.Area] AS [UK County Areas]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/UK Counties Polygons.kml]
(kml, Table is [uk-county-borders.kmz/Borders/Crown Dependencies/Jersey]);



[Regions]:
LOAD
	[LocationID],
	[CountryCode],
	[CountryName],
	[County] AS [County-UK County Names],
	[City],
	[Outcode],
	[Latitude],
	[Longitude]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Location.xlsx]
(ooxml, embedded labels, table is Regions);

[Third Parties]:
LOAD
	[TPCounter],
	[Claim Id],
	[TP ID],
	[TP Mobile Number],
	[TP Age],
	[TP Gender],
	[TP Name],
	[TP Email Address],
	[TP Car Id],
	[TP Post Code]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Third Parties.xlsx]
(ooxml, embedded labels, table is Sheet1);

[Policies Cars]:
LOAD
	[PolicyCounter],
	[Customer ID],
	[Policy Id],
	[Product Id],
	[Policy Staff Id],
	[CarId],
	[Cover Type],
	[Policy Excess],
	[Payment Freq],
	[Annual Premium],
	[Policy Start Date],
	Date([Policy End Date] ) AS [Policy End Date]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Policies.xlsx]
(ooxml, embedded labels, table is [Policies Cars]);

[Suppliers]:
LOAD
	[SupplierCounter],
	[Supplier Id],
	[Supplier Name],
	[Supplier Type],
	[Supplier City],
	[Supplier Hourly Rate],
	[Supplier Satisfaction Rating],
	[Supplier Complaints]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Suppliers.xlsx]
(ooxml, embedded labels, table is Suppliers);

[Channel]:
LOAD
	[ChannelID],
	[Channel]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Channel.xlsx]
(ooxml, embedded labels, table is Channel);

[Brokers]:
LOAD
	[BrokerCounter],
	[ChannelID],
	[Broker Id],
	[BrokerName]
 FROM [lib://OneDrive - skb@qlik.com/Data Files/Insurance Data/Channel.xlsx]
(ooxml, embedded labels, table is Brokers);


RENAME TABLE [uk-county-borders.kmz/Borders/United Kingdom/England/Shire Counties] to [UK Counties];


[autoCalendar]: 
  DECLARE FIELD DEFINITION Tagged ('$date')
FIELDS
  Dual(Year($1), YearStart($1)) AS [Year] Tagged ('$axis', '$year'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),Num(Ceil(NUM(Month($1))/3),00)) AS [Quarter] Tagged ('$quarter', '$cyclic'),
  Dual(Year($1)&'-Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [YearQuarter] Tagged ('$yearquarter', '$qualified'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [_YearQuarter] Tagged ('$yearquarter', '$hidden', '$simplified'),
  Month($1) AS [Month] Tagged ('$month', '$cyclic'),
  Dual(Year($1)&'-'&Month($1), monthstart($1)) AS [YearMonth] Tagged ('$axis', '$yearmonth', '$qualified'),
  Dual(Month($1), monthstart($1)) AS [_YearMonth] Tagged ('$axis', '$yearmonth', '$simplified', '$hidden'),
  Dual('W'&Num(Week($1),00), Num(Week($1),00)) AS [Week] Tagged ('$weeknumber', '$cyclic'),
  Date(Floor($1)) AS [Date] Tagged ('$axis', '$date', '$qualified'),
  Date(Floor($1), 'D') AS [_Date] Tagged ('$axis', '$date', '$hidden', '$simplified'),
  If (DayNumberOfYear($1) <= DayNumberOfYear(Today()), 1, 0) AS [InYTD] ,
  Year(Today())-Year($1) AS [YearsAgo] ,
  If (DayNumberOfQuarter($1) <= DayNumberOfQuarter(Today()),1,0) AS [InQTD] ,
  4*Year(Today())+Ceil(Month(Today())/3)-4*Year($1)-Ceil(Month($1)/3) AS [QuartersAgo] ,
  Ceil(Month(Today())/3)-Ceil(Month($1)/3) AS [QuarterRelNo] ,
  If(Day($1)<=Day(Today()),1,0) AS [InMTD] ,
  12*Year(Today())+Month(Today())-12*Year($1)-Month($1) AS [MonthsAgo] ,
  Month(Today())-Month($1) AS [MonthRelNo] ,
  If(WeekDay($1)<=WeekDay(Today()),1,0) AS [InWTD] ,
  (WeekStart(Today())-WeekStart($1))/7 AS [WeeksAgo] ,
  Week(Today())-Week($1) AS [WeekRelNo] ;

DERIVE FIELDS FROM FIELDS [Customer DOB], [Staff DOB], [Staff Hire Date], [Claim Occurrence Date], [Claim Notification Date], [Claim Settled Date], [Policy Start Date], [Policy End Date], [BenchmarkDate] USING [autoCalendar] ;



